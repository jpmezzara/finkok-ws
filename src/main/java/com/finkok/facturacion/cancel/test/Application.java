
package com.finkok.facturacion.cancel.test;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Application", targetNamespace = "http://facturacion.finkok.com/cancel")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Application {


    /**
     * This method cancels a CFDI by the given enveloped signature
     * 
     * @param password
     * @param xml
     * @param storePending
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelaCFDResult
     */
    @WebMethod(operationName = "cancel_signature", action = "cancel_signature")
    @WebResult(name = "cancel_signatureResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "cancel_signature", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.CancelSignature")
    @ResponseWrapper(localName = "cancel_signatureResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.CancelSignatureResponse")
    public CancelaCFDResult cancelSignature(
        @WebParam(name = "xml", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] xml,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "store_pending", targetNamespace = "http://facturacion.finkok.com/cancel")
        Boolean storePending);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param password
     * @param rtaxpayerId
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelPendingResult
     */
    @WebMethod(operationName = "get_out_pending", action = "get_out_pending")
    @WebResult(name = "get_out_pendingResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_out_pending", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetOutPending")
    @ResponseWrapper(localName = "get_out_pendingResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetOutPendingResponse")
    public CancelPendingResult getOutPending(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param password
     * @param rtaxpayerId
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelPendingResult
     */
    @WebMethod(operationName = "get_pending", action = "get_pending")
    @WebResult(name = "get_pendingResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_pending", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetPending")
    @ResponseWrapper(localName = "get_pendingResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetPendingResponse")
    public CancelPendingResult getPending(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param password
     * @param total
     * @param rtaxpayerId
     * @param uuid
     * @param taxpayerId
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.AcuseSatEstatus
     */
    @WebMethod(operationName = "get_sat_status", action = "get_sat_status")
    @WebResult(name = "get_sat_statusResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_sat_status", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetSatStatus")
    @ResponseWrapper(localName = "get_sat_statusResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetSatStatusResponse")
    public AcuseSatEstatus getSatStatus(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "taxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String taxpayerId,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/cancel")
        String uuid,
        @WebParam(name = "total", targetNamespace = "http://facturacion.finkok.com/cancel")
        String total);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param cer
     * @param password
     * @param rtaxpayerId
     * @param uuid
     * @param key
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.RelatedResult
     */
    @WebMethod(operationName = "get_related", action = "get_related")
    @WebResult(name = "get_relatedResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_related", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetRelated")
    @ResponseWrapper(localName = "get_relatedResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetRelatedResponse")
    public RelatedResult getRelated(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/cancel")
        String uuid,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key);

    /**
     * This method returns the status of a peding buffer invoice by using an uuid
     *             
     * 
     * @param password
     * @param uuid
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.QueryPendingResult
     */
    @WebMethod(operationName = "query_pending_cancellation", action = "query_pending_cancellation")
    @WebResult(name = "query_pending_cancellationResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "query_pending_cancellation", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.QueryPendingCancellation")
    @ResponseWrapper(localName = "query_pending_cancellationResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.QueryPendingCancellationResponse")
    public QueryPendingResult queryPendingCancellation(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/cancel")
        String uuid);

    /**
     * This method returns a session id for work with the webservices
     * 
     * @param password
     * @param serial
     * @param storePending
     * @param taxpayerId
     * @param uuids
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelaCFDResult
     */
    @WebMethod(operationName = "sign_cancel", action = "sign_cancel")
    @WebResult(name = "sign_cancelResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "sign_cancel", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.SignCancel")
    @ResponseWrapper(localName = "sign_cancelResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.SignCancelResponse")
    public CancelaCFDResult signCancel(
        @WebParam(name = "UUIDS", targetNamespace = "http://facturacion.finkok.com/cancel")
        UUIDS uuids,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "taxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String taxpayerId,
        @WebParam(name = "serial", targetNamespace = "http://facturacion.finkok.com/cancel")
        String serial,
        @WebParam(name = "store_pending", targetNamespace = "http://facturacion.finkok.com/cancel")
        Boolean storePending);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param password
     * @param type
     * @param uuid
     * @param taxpayerId
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.ReceiptResult
     */
    @WebMethod(operationName = "get_receipt", action = "get_receipt")
    @WebResult(name = "get_receiptResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_receipt", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetReceipt")
    @ResponseWrapper(localName = "get_receiptResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetReceiptResponse")
    public ReceiptResult getReceipt(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "taxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String taxpayerId,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/cancel")
        String uuid,
        @WebParam(name = "type", targetNamespace = "http://facturacion.finkok.com/cancel")
        String type);

    /**
     * This method returns a session id for work with the webservices
     * 
     * @param cer
     * @param password
     * @param storePending
     * @param taxpayerId
     * @param key
     * @param uuids
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelaCFDResult
     */
    @WebMethod(action = "cancel")
    @WebResult(name = "cancelResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "cancel", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.Cancel")
    @ResponseWrapper(localName = "cancelResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.CancelResponse")
    public CancelaCFDResult cancel(
        @WebParam(name = "UUIDS", targetNamespace = "http://facturacion.finkok.com/cancel")
        UUIDS uuids,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "taxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String taxpayerId,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key,
        @WebParam(name = "store_pending", targetNamespace = "http://facturacion.finkok.com/cancel")
        Boolean storePending);

    /**
     * This method returns the sat receipt (response) of the cancellation webservice
     *             
     * 
     * @param cer
     * @param password
     * @param rtaxpayerId
     * @param uuid
     * @param key
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.RelatedResult
     */
    @WebMethod(operationName = "get_out_related", action = "get_out_related")
    @WebResult(name = "get_out_relatedResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "get_out_related", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetOutRelated")
    @ResponseWrapper(localName = "get_out_relatedResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.GetOutRelatedResponse")
    public RelatedResult getOutRelated(
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId,
        @WebParam(name = "uuid", targetNamespace = "http://facturacion.finkok.com/cancel")
        String uuid,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key);

    /**
     * 
     * @param cer
     * @param password
     * @param xml
     * @param storePending
     * @param taxpayerId
     * @param key
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.CancelaCFDResult
     */
    @WebMethod(operationName = "out_cancel", action = "out_cancel")
    @WebResult(name = "out_cancelResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "out_cancel", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.OutCancel")
    @ResponseWrapper(localName = "out_cancelResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.OutCancelResponse")
    public CancelaCFDResult outCancel(
        @WebParam(name = "xml", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] xml,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "taxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String taxpayerId,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key,
        @WebParam(name = "store_pending", targetNamespace = "http://facturacion.finkok.com/cancel")
        Boolean storePending);

    /**
     * 
     * @param cer
     * @param password
     * @param uuidAR
     * @param rtaxpayerId
     * @param key
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.AcceptRejectResult
     */
    @WebMethod(operationName = "out_accept_reject", action = "out_accept_reject")
    @WebResult(name = "out_accept_rejectResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "out_accept_reject", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.OutAcceptReject")
    @ResponseWrapper(localName = "out_accept_rejectResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.OutAcceptRejectResponse")
    public AcceptRejectResult outAcceptReject(
        @WebParam(name = "UUID_AR", targetNamespace = "http://facturacion.finkok.com/cancel")
        UUIDAR uuidAR,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key);

    /**
     * 
     * @param cer
     * @param password
     * @param rtaxpayerId
     * @param key
     * @param uuidsAR
     * @param username
     * @return
     *     returns com.finkok.facturacion.cancel.test.AcceptRejectResult
     */
    @WebMethod(operationName = "accept_reject", action = "accept_reject")
    @WebResult(name = "accept_rejectResult", targetNamespace = "http://facturacion.finkok.com/cancel")
    @RequestWrapper(localName = "accept_reject", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.AcceptReject")
    @ResponseWrapper(localName = "accept_rejectResponse", targetNamespace = "http://facturacion.finkok.com/cancel", className = "com.finkok.facturacion.cancel.test.AcceptRejectResponse")
    public AcceptRejectResult acceptReject(
        @WebParam(name = "UUIDS_AR", targetNamespace = "http://facturacion.finkok.com/cancel")
        UUIDSAR uuidsAR,
        @WebParam(name = "username", targetNamespace = "http://facturacion.finkok.com/cancel")
        String username,
        @WebParam(name = "password", targetNamespace = "http://facturacion.finkok.com/cancel")
        String password,
        @WebParam(name = "rtaxpayer_id", targetNamespace = "http://facturacion.finkok.com/cancel")
        String rtaxpayerId,
        @WebParam(name = "cer", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] cer,
        @WebParam(name = "key", targetNamespace = "http://facturacion.finkok.com/cancel")
        byte[] key);

}
